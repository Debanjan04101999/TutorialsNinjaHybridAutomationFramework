<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="9" hostname="DESKTOP-UD0VP2U" failures="1" tests="1" name="Default test" time="6.807" errors="0" timestamp="2025-06-07T21:01:44 IST">
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisterWithoutProvidingAnyFields" time="1.638">
    <failure type="java.lang.AssertionError" message="expected [Warning: You must agree to the Privacy Policy!] but found [Password must be between 4 and 20 characters!]">
      <![CDATA[java.lang.AssertionError: expected [Warning: You must agree to the Privacy Policy!] but found [Password must be between 4 and 20 characters!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at tutorialsNinjaAllTestCases.RegisteAllTest.verifyRegisterWithoutProvidingAnyFields(RegisteAllTest.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- verifyRegisterWithoutProvidingAnyFields -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegistingAccountUsingMandtoryFields" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegistingAccountUsingMandtoryFields -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisterWhenNoOptionIsSelectedForNewsletterField" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisterWhenNoOptionIsSelectedForNewsletterField -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisteringAccountByProvidingInvalidePhoneNumber" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAccountByProvidingInvalidePhoneNumber -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisteringAccountByProvidingMismatchingPasswords" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAccountByProvidingMismatchingPasswords -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisteringAccountByProvidingExistingAcountDetails" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAccountByProvidingExistingAcountDetails -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="validateregisteringAnAccountByprovidingAllTheFields" time="0.0">
    <ignored/>
  </testcase> <!-- validateregisteringAnAccountByprovidingAllTheFields -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="validateDifferentWysOfNavigatingToRegisterAccountPage" time="0.0">
    <ignored/>
  </testcase> <!-- validateDifferentWysOfNavigatingToRegisterAccountPage -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisteringAccountByProvidingInvalideEmail" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAccountByProvidingInvalideEmail -->
  <testcase classname="tutorialsNinjaAllTestCases.RegisteAllTest" name="verifyRegisterWhenYesOptionIsSelectedForNewsletterField" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisterWhenYesOptionIsSelectedForNewsletterField -->
</testsuite> <!-- Default test -->
